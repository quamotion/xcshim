#!/bin/bash
# Copyright (c) 2019 Quamotion bvba
# All rights reserved.
#
# This source code is licensed under the license found in the
# LICENSE file in the root directory of this source tree.
#
# This file is part of xcode-shim @PROJECT_VERSION@
#
# This is a stub for xcodebuild. It is used by Appium to start the
# WebDriverAgent on an iOS device. We forward the request to xcuitrunner.
#

echo This is a stub for xcodebuild. It was invoked in "$(pwd)" with arguments "$@"

command="$1"

case $command in
    clean)
        echo "This xcodebuild stub does not implement clean (as there is nothing to clean)"
        echo "Silently ignoring the clean command..."
    ;;
    build-for-testing)
        # Parse the device UDID. Sample invocation:
        # xcodebuild build-for-testing
        #   test-without-building
        #   -project /usr/lib/node_modules/appium/node_modules/appium-webdriveragent/WebDriverAgent.xcodeproj
        #   -scheme WebDriverAgentRunner
        #   -destination id=some_udid
        #   IPHONEOS_DEPLOYMENT_TARGET=12.4
        #   GCC_TREAT_WARNINGS_AS_ERRORS=0
        #   COMPILER_INDEX_STORE_ENABLE=NO
        for (( i=1; i<=$#; i++))
        do
        case ${!i} in
            # Find the -destination id=some_udid arguments, by finding
            # the -destination argument first, and then accessing the
            # next argument.
            # Finally, take a substring of the id=some_udid argument, by
            # removing the first three characters
            *destination)
                udid_index=$((i+1))
                udid_arg=${!udid_index}
                udid=${udid_arg:3}
                echo "Running on device with UDID ${udid}"
            ;;
        esac
        done

        # Make the xcuitrunner process replace this bash script. This will cause
        # SIGTERM/SIGINT signals to be forwarded directly to xcuitrunner, which
        # can then handle it properly.
        exec /usr/share/xcuitrunner/xcuitrunner \
            run \
            -d ${DEVELOPER_PROFILE_PATH:-@developer_profile_file@} \
            -p ${DEVELOPER_PROFILE_PASSWORD:-@developer_profile_password@} \
            -l ${LICENSE_PATH:-@license_file@} \
            -k ${DEVELOPER_IMAGE_PATH:-@developer_disk_dir@} \
            -u ${udid} \
            -a ~
    ;;
    *)
        echo "Ignoring unknown command $command"
    ;;
esac
